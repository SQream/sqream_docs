Advancing to the Next New Release Branch
========================

1. Create your new branch:


   1. From the GitHub remote platform, select a repository.


   2. From the branch menu, select the branch you want to base your new branch on.


   3. In the field displayed below the selected branch, type the name of the new branch.

      Remember that the branch naming convention is vYYYY.##. For example, the naming convention for the 2022.1.2 release notes branch is **v2022.1.2**.


   4. Press **Enter**.

      Your new branch is created and is 100% identical to the branch that it's based on.

2. Modify your new branch in all of the relevant ways:

   1. Create all new pages corresponding to new features.

      New features can refer to whatever the new release includes, such as new feature guide, operational guide, or configuration guide pages, etc. Some new features include new configuration flags, meaning that you have to document the new feature **and** create a page for the related new configuration flag. You can add new images, such as screenshots, if needed.

   2. Modify the content of existing pages to reflect the new feature(s).

   3. Replace all absolute links to point to the new branch.

      For example, ```Setting Total Device Memory Usage in SQream Instance <https://docs.sqream.com/en/v2022.1.1/configuration_guides/cuda_mem_quota.html>`_`` below must be replaced with ```Setting Total Device Memory Usage in SQream Instance <https://docs.sqream.com/en/v2022.1.2/configuration_guides/cuda_mem_quota.html>`_``. Using the ref syntax avoids the need to replace absolute links (and each branch has many), but cannot be used in all cases. Because the ref syntax can only point to a page and not to a specific section on a page, if you want to link users to a certain section you must use an absolute link. Instead, you can use the ref syntax and instruct users to navigate to the correct section on the page. The ref syntax is **:ref:`anchor_name`**.

There are certain specific cases in release notes documentation where you must use the absolute link instead of the ref syntax. For more information, see **Documeting Minor Releases**.

   .. code-block::

      .. _admin_worker_flags:

         *************************
         Worker Administration Flags
         *************************
         The **Worker Administration Flags** page describes **Worker** modification type flags, which can be modified by administrators on a session and cluster basis using the ``ALTER SYSTEM SET`` command:

         * `Setting Total Device Memory Usage in SQream Instance <https://docs.sqream.com/en/v2022.1.1/configuration_guides/cuda_mem_quota.html>`_
         * `Enabling Manually Setting Reported IP <https://docs.sqream.com/en/v2022.1.1/configuration_guides/machine_ip.html>`_
         * `Setting Port Used for Metadata Server Connection <https://docs.sqream.com/en/v2022.1.1/configuration_guides/metadata_server_port.html>`_
         * `Assigning Local Network IP <https://docs.sqream.com/en/v2022.1.1/configuration_guides/use_config_ip.html>`_
         * `Enabling the Query Healer <https://docs.sqream.com/en/v2022.1.1/configuration_guides/is_healer_on.html>`_
         * `Configuring the Query Healer <https://docs.sqream.com/en/v2022.1.1/configuration_guides/healer_max_inactivity_hours.html>`_
         * `Adjusting Permitted Log-in Attempts <https://docs.sqream.com/en/v2022.1.1/configuration_guides/login_max_retries.html>`_

Documenting Minor Releases
===========================================
Because many releases are completed on a yearly basis, we give users access to all of them, as in the `2021.2 release notes <https://docs.sqream.com/en/latest/releases/2021.2_index.html>`_.

You do this by nesting all releases under the **2021.2_index** file using a TOC tree, as follows:

.. code-block::

   .. toctree::
      :maxdepth: 1
      :glob:

      2021.2.1.24
      2021.2.1
      2021.2

Here's where it gets a little complex, so take a seat.

As described earlier, it's better (and correct) to use the ref syntax to create links to other pages. However, this rule does not apply to links on minor release notes pages.

For example, when you're viewing the **2021.2** branch on the front end, the menu shows a link to each of the nested minor branches. However, clicking Release Notes 2021.2.1.24 does not take you to the 2021.2.1.24 branch, but rather to the page referring to that release notes in the branch that you're already on (2022.1). This is the correct behavior.

Here's where it gets a little tricky. Notice that the `Release Notes 2021.2.1.24 <https://docs.sqream.com/en/v2022.1/releases/2021.2.1.24.html>`_ page describes the **Query Healer** feature. Because this feature was introduced in version 2021.2.1.24, it is documented on the 2021.2.1.24 branch *only*. This feature *does not exist* on all versions (and therefore branches) before 2021.2.1.24. Therefore, the link to the Query Healer documentation is actually a link to the Query Healer page located *on the 2021.2.1.24 branch*.

If you click the Query Healer link on this page, you'll notice that you're taken to the 2021.2.1.24 branch, away from the branch that you were previously on. However, the entire branch is identical except for the Query Healer (and related configuration flags). This is the reason for basing a new release branch on the previous version. If you were to search for the Query Healer on the 2021.2 (or earlier) branch, you would not find it. The **query_healer** page does not exist in the folders belonging to all branches preceding 2021.2.1.24.

When it's time to advance to the new release, you simply add the new release's anchor (for example, 2021.2.1.25) to the TOC tree file, as follows:

.. code-block::

   .. toctree::
      :maxdepth: 1
      :glob:

      2021.2.1.25
      2021.2.1.24
      2021.2.1
      2021.2

.. tip:: Make sure that you've added the actual 2021.2.1.25 file to the 2021.2 folder. Even if the anchor exists in the TOC tree, the page will not appear on the front-end if the file does not exist. To the converse, if the file exists, but its anchor is not in the TOC tree, users will be able to search for it using the search bar, but will not see it anywhere on the menu.











Updating Other Areas of the Documentation
===========================================
New releases often require you to update other areas of the documentation. For example, some new features include new configuration flags, which are used to configure the new feature. In such a case, you'll have to create a new configuration flag page (or pages).

For the correct way to add new release content related to your new release notes branch , see the following:

* How to create a new **Configuration Flag** page - new features may require creating new flags to configure them.

* How to create a new **Reference Guides** page - new features may include new statements or commands.

Adding new content in other sections, such as Feature Guides, is pretty straightforward because their structure is simple than the above menu sections. This requires you to create a new page and insert its anchor into the TOC tree syntax located in its respective index file. For example, if you're adding a new feature guide, do the following:

1. Create the new .rst file.

2. Insert the new file's anchor into the TOC tree syntax in the index file in the **Feature Guides** folder.


Updating Configuration Flags
-------------------------------
New configuration flags must be added in the following places:

* The correct location on the `Configuration Flags <https://docs.sqream.com/en/latest/configuration_guides/configuration_flags.html>`_ page:

  * Administration Flags:

    * Regular Administration flags
    * Cluster Administration flags
    * Worker Administration flags

  * Generic flags:

    * Regular Generic flags
    * Worker Generic flags

    The **Development** team decides how to categorize the above flags, each of which is described in the shared `Configuration Flags - Final Review <https://docs.google.com/spreadsheets/d/1HojnqJdK7_ueJc0gLyK-o0Ig_XAzDxBC430eFuk6LGQ/edit#gid=0>`_ spreadsheet.

* On the page belonging to the specific flag. If the flag page does not exist (such as for new flags), you must create it.

* In the table located on the `All Configurations page <https://docs.sqream.com/en/latest/configuration_guides/current_method_all_configurations.html>`_

.. note:: The above changes must be done on **every branch**. The best way to do this is to keep a current local version of all documentation, and to add the required files (and/or folders) to every live branch **that it applies to**. Remember to modify all absolute links in accordance with the branch that you're copying the files into.

.. warning:: You should not add features introduced in 2022.1 to any preceding branches. This will allow front-end users without access to search for feature descriptions on branches that do not provide those features!


Updating Reference Guide Pages
-------------------------------
When new statements or functions are added, they are documented in the **Reference Guides** section, which includes the following sub-sections:

* SQL Syntax Features:

  * Identifiers
  * Literals
  * Scalar expressions
  * Joins
  * Common table expressions (CTEs)
  * Window Functions
  * Subqueries
  * Null handling

* SQL Statements:

  * Data Definition Commands (DDL)
  * Data Manipulation Commands (DML)
  * Utility Commands
  * Workload Management
  * Access Control Commands

* SQL Functions:

  * Built-In Scalar Functions
  * User-Defined Scalar Functions
  * Aggregate Functions
  * Window Functions
  * Workload Management Functions

When a new syntax feature, statement, or function is developed, you must determine the correct place to document it in the topic menu above. In some cases the statement or function is associated with a particular feature. In such a case you must also either create a new Feature Guides page, or update an existing one. While you are becoming familiar with the SQream product, the **Product** team can help you determine where to document new features, statements, or functions.









