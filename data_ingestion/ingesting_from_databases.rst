.. _ingesting_from_databases:*********Databases********* The **SQLoader** is a CLI program that enables you to load into SQreamDB data from other databases.**SQLoader** supports Oracle and Postgresql... contents::    :local:   :depth: 1   Before You Begin================It is essential that you have the following:* Java 17* SQLoader configuration files* SQLoader.jar fileGetting the SQLoader Configuration and JAR Files================================================1. Download the ``.tar`` file using the following command:.. code-block:: linux	curl -O https://sq-ftp-public.s3.amazonaws.com/sqloader-0.0.2.tar.gz2. Extract the ``.tar`` file using the following command:.. code-block:: linux	tar -xf sqloader-0.0.2.tar.gzA folder named ``sqloader-0.0.2`` with the following files is created:   .. list-table:: SQLoader Files   :widths: auto   :header-rows: 1      * - File     - Description   * - ``sqream-mapping.json``     - Maps Postgresql and Oracle data types into SQreamDB data types during ingestion   * - ``sqload-jdbc-oracle-incr.properties``     - Pre-configured data loading configuration file.   * - ``reserved_words.txt``     -    * - ``sqloader-0.0.2.jar``     - The SQLoader package file    Loading Data into SQreamDB Tables=================================1. Run the ``sqloader.jar`` file using the following CLI command:.. code-block:: console	java -jar sqloader-0.0.2.jar	2. You may load the entire data of a source table using the following CLI command:.. code-block:: console 	java -jar sqloader-0.0.2.jar -table source_table_name	3. You may customize the data load either by using each of the following parameters within a CLI command or by configuring the ``properties`` file:.. list-table:: SQLoader CLI Parameters   :widths: auto   :header-rows: 1      * - CLI Parameter     - Description   * - ``-batchsize=<batchSize>``     - The number of records to be inserted into SQreamDB at once. Default is ``10.000``   * - ``-casesensative=<true/false>``     - Keeps table name uppercase and lowercase characters when table is created in SQreamDB. Default is ``false``   * - ``-chunkSize=<chunkSize>``     - The number of records read at once from the source database. Default is ``0``   * - ``-columnlist=<columnFilePath>``     - The name of the file that contains all column names   * - ``-columns=<columns>``     - The name or names of columns to be loaded into SQreamDB ("col1,col2, ..."). Default is all   * - ``-config=<config_file_name>``     - Defines the configuration file you wish to use. Default is ``config/sqload-jdbc-oracle-incr.properties``   * - ``-count=<true/false>``     - Defines whether or not table rows will be counted before being loaded into SQreamDB Default is ``true``   * - ``-delete=<true/false>``     - Defines whether or not loading using Change Data Capture (CDC) includes deleted rows. Default is ``true``   * - ``-drop=<true/false>``     - Defines whether or not a new target table in SQreamDB is created. Default is ``true``. If ``false``, you will need to configure a target table name using the ``-target=<targetTableName>`` parameter   * - ``-fetchsize=<fetchSize>``     - The number of records to be read at once from source database. Default is ``100000``   * - ``-filter=<filter>``     - Defines whether or not only records with SQL conditions are loaded. Default is ``1=1``   * - ``-h, --help``     - Displays the help menu and exits   * - ``-limit=<limit>``     - Limits the number of rows to be loaded. Default is ``0``   * - ``-load_dttm=<true/false>``     - Add an additional ``load_dttm`` column that defines the time and date of loading. Default:true   * - ``-lock_check=<true/false>``     - Defines whether or not SQLoader will check source table is locked before the loading starts. Default is ``true``   * - ``-lock_table=<true/false>``     - Defines whether or not SQLoader will lock target table before the loading starts. Default is ``true``   * - ``-log_dir=<log_directory_path>``     - Defines the path of log directory created when loading data. Default is ``logs``   * - ``-partition=<partition_name>``     - Defines the partition to load data from if table is partitioned   * - ``-rowid=deprecated``     - Defines whether or not SQLoader will get row IDs from Oracle tables. Default is ``false``   * - ``-split=<split_by_column>``     - Column name for split (required for multi thread loads)   * - ``-table=<source_table_name>``     - Source table name to load data from   * - ``-target=<target_table_name>``     - Target table name to load data into. Default is same as source table   * - ``-target_db=deprecated``     - Target DB name to load data into   * - ``-thread=<number_of_threads>``     - Number of threads to be used during loading. Default is ``1``   * - ``-truncate=<true/false>``     - Truncate target table. Default is ``false``   * - ``-type=<full/inc/cdc>``     - Defines a loading type that affects the table that is created in SQreamDB. Default is ``full``. Options are ``full``, ``cdc``, or ``incremental``   * - ``-use_dbms_lob=<true/false>``     - Defines whether or not SQLoader uses ``dbms_lob_substr`` function for ``CLOB`` and ``BLOB`` data types. Default is ``true``   * - ``-use_partitions=<true/false>``     - Defines whether or not SQLoader uses partitions in ``SELECT`` statements. Default is ``true``Using the ``type`` Parameter============================Using the ``type`` parameter you may define a loading type that affects the table that is created in SQreamDB. .. list-table:: The ``type`` Parameter   :widths: auto   :header-rows: 1      * - Loading Type     - Description   * - Full Table     - The entire data of the source table is loaded into SQreamDB   * - Change Data Capture (CDC)     - Only changes made to the source table data since last load will be loaded into SQreamDB. Changes include transactions of ``INSERT``, ``UPDATE``, and ``DELETE`` statements. SQLoader recognizes tables by table name and metadata. Supported for Oracle only   * - Incremental     - Only changes made to the source table data since last load will be loaded into SQreamDB. Changes include transactions of ``INSERT`` statement. SQLoader recognizes the table by table name and metadata. Supported for Oracle only	 Data Type Mapping =================The **SQLoader** automatically maps data types used in Postgresql and Oracle tables that are loaded into SQreamDB... list-table:: Postgresql   :widths: auto   :header-rows: 1      * - Postgresql Type     - SQreamDB Type   * - ``CHAR``, ``NCHAR``, ``VARCHAR``, ``NVARCHAR``, ``NVARCHAR2``, ``CHARACTER``, ``NTEXT``     - ``TEXT``   * - ``TEXT``     - ``TEXT``   * - ``BIGINT``, ``INT``, ``SMALLINT``, ``INT``, ``TINYINT``     - ``BIGINT``   * - ``DATETIME``, ``TIMESTAMP``, ``SMALLDATETIME``, ``DATETIMEOFFSET``, ``DATETIME2``     - ``DATETIME``   * - ``DATE``     - ``DATE``   * - ``BIT``     - ``BOOL``   * - ``decimal``, ``numeric``     - ``numeric``   * - ``float``, ``double``     - ``double``   * - ``REAL``     - ``REAL``   * - ``VARBINARY``     - ``TEXT``.. list-table:: Oracle   :widths: auto   :header-rows: 1      * - Oracle Type     - SQreamDB Type   * - ``BIGINT``, ``INT``, ``SMALLINT``, ``INTEGE``     - ``BIGINT``   * - ``CHAR``, ``NCHAR``, ``VARCHAR``, ``VARCHAR2``, ``NVARCHAR``, ``NVARCHAR2``, ``CHARACTER``     - ``TEXT``   * - ``DATE``, ``DATETIME``     - ``DATETIME``   * - ``TIMESTAMP``     - ``DATETIME``   * - ``DATE``     - ``DATE``   * - ``BOOLEAN``     - ``BOOL``   * - ``NUMERIC``     - ``NUMERIC``   * - ``FLOAT``, ``DOUBLE``     - ``DOUBLE``   * - ``CLOB``     - ``TEXT``   * - ``BLOB``     - ``TEXT``Examples========Loading data into a CDC table using the ``type`` and ``limit`` parameters:.. code-block:: console 	java -jar sqloader-0.0.2.jar -table source_table_name -type cdc -limit 100Loading data into a table using your own configuration file (this will override the default configuration file):.. code-block:: console	java -jar sqloader-0.0.2.jar -config path\to\your\config\file	Loading data into a table using a custom configuration file:.. code-block:: console	-config MyConfigFile.properties -table source_table_name -type cdc -target target_table_name -drop true -lock_check falseLoading data into a table using a the ``filter`` parameter:.. code-block:: console	java -jar sqloader-0.0.2.jar -table source_table_name -filter column_name>50