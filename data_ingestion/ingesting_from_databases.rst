.. _ingesting_from_databases:*********Databases********* The **SQLoader** enables you to transfer data into SQreamDB from other databases. It operates using the CLI. SQreamDB supports Oracle and Postgres tables only... contents::    :local:   :depth: 1   Before You Begin================It is essential that you have the following:* Java 17* configuration files* `SQLoader.jar file <https://sq-ftp-public.s3.amazonaws.com/sqloader-0.0.2.jar>`_Transferring Data into SQreamDB Tables======================================1. After you have downloaded the configuration files, run the ``sqloader.jar`` file using the following command:.. code-block::	java -jar sqloader.jar	2. You may customize the data load by using either the following parameters or the ``properties`` file you had downloaded:.. list-table:: SQLoader Parameters   :widths: auto   :header-rows: 1      * - Parameter     - Description   * - ``-batchsize=<batchSize>``     - Number of records to insert target database at once. Default is ``10.000``   * - ``-casesensative=<caseSensitive>``     - Keeps table name uppercase and lowercase characters during table creation. Default is ``false``   * - ``-chunkSize=<chunkSize>``     - Number of records to read from source database at once. Default ``0``   * - ``-columnlist=<columnFilePath>``     - Name of file contains column names.   * - ``-columns=<columns>``     - Name of columns to be ingested ("col1,col2, ..."). Default is all   * - ``-config=config file name``     - Defines the configuration file to use. Default is ``config/sqload-jdbc-oracle-incr.properties``   * - ``-count=<count>``     - Defines whether or not table rows will be counted before ingestion? Default is ``true``   * - ``-delete=<cdcDelete>``     - Defines whether or not loading using CDC will take deleted rows under consideration. Default is ``true``   * - ``-drop=<drop>``     - Defines whether or not a new target table is created. Default is ``true``. If ``false``, you will need to configure a target table name.   * - ``-fetchsize=<fetchSize>``     - Number of records to read from source database at once. Default is ``100000``   * - ``-filter=<filter>``     - Loads records where SQL condition exists. Default is ``1=1``.   * - ``-h, --help``     - Displays help menu and exits   * - ``-limit=<limit>``     - Limits the number of rows to be loaded. Default is ``0``   * - ``-load_dttm=<loadDttm>``     - Add an additional ``load_dttm`` column that defines the time and date of loading to the target table. Default:true   * - ``-lock_check=<lockCheck>``     - Defines whether or not checking if table is locked before loading starts. Default is ``true``.   * - ``-lock_table=<lockTable>``     - Defines whether or not to lock target table before loading operation starts. Default is ``true``   * - ``-log_dir=<Log directory> path``     - Defines the path of log directory created when loading data. Default is ``logs``   * - ``-partition=partition name``     - If table is partitioned, this parameter defines the partition to load the data from.   * - ``-rowid=deprecated``     - Get row id from oracle table? Default is ``false``   * - ``-split=<splitByColumn>``     - Column name for split (required for multi thread loads)   * - ``-table=<sourceTableName>``     - Source table name   * - ``-target=<targetTableName>``     - Target table name. Default is same as source table   * - ``-target_db=<deprecated>``     - Target DB name   * - ``-thread=<thread>``     - Number of thread. Default is ``1``   * - ``-truncate=<true/false>``     - Truncate target table? Default is ``false``   * - ``-type=<type>``     - Load type. [full),cdc,incremental]. Default is ``full``   * - ``-use_dbms_lob=<useDbmsLob>``     - Use dbms_lob_substr function for CLOB/BLOB data types? Default is ``true``.    * - ``-use_partitions=<usePartitions>``     - Use partitions in select statements? Default is ``true``Loading types=============There are three types of data loading. You can define the type of table using the ``type`` parameter. .. list-table::    :widths: auto   :header-rows: 1      * - Table Type     - Description   * - Full Table     - This is a full load. The entire source table will be loaded into SQreamDB.    * - Change Data Capture (CDC)     - This loads changes made to the last time you loaded a specific table. Changes are ``INSERT``, ``UPDATE``, and ``DELETE``. SQLoader recognizes the table by the table name and metadata. Supported for Oracle only.   * - Incremental     - This loads changes made to the last time you loaded a specific table. Changes are ``INSERT``. SQLoader recognizes the table by the table name and metadata. Supported for Oracle only.	 Mapping Data Types==================Examples========Creating a CDC table using the ``type`` and ``limit`` parameters:code-block:: console 	java -jar [sqloader_jar_name] -table [source_table_name] -type <full/cdc/inc> -limit 100Creating a table using your own configuration file:This will override the default configuration file you had already downloaded.	code-block:: console	java -jar [sqloader_jar_name]  -config <config file path> 	Creating a  parameters:code-block:: console	-config DBUtils.configFilePath -source_db ORCL -table SMSDW.sltest_fullload_partition -type full -target SMSDW.sltest_fullload_partition -drop true -lock_check false -partition P20230101Creating a table using a the ``filter`` parameter:code-block:: console	java -jar [sqloader_jar_name] -table [source_table_name] -filter column_name>50