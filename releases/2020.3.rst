.. _2020.3:

**************************
What's New in 2020.3
**************************
SQream DB v2020.3 contains new features, performance enhancements, and resolved issues.

The 2020.3 Release Notes describe the following:

.. contents:: 
   :local:
   :depth: 1

::::

Release Notes Version 2020.3.2.1
==============

Performance Enhancements
-------------
* Metadata on Demand optimization resulting in reduced latency and improved overall performance.


Known Issues and Limitations
-------------
* Multiple count distinct operations is enabled for all data types.

Upgrading to v2020.3.2.1
-------------

Versions are available for IBM POWER9, RedHat (CentOS) 7, Ubuntu 18.04, and other OSs via Docker.

Contact your account manager to get the latest release of SQream DB.



::::



Release Notes Version 2020.3.1
=================
New Features
-------------
The following list describes the new features:


* TEXT data type:
   * Full support for ``MIN`` and ``MAX`` aggregate functions on ``TEXT`` columns in ``GROUP BY`` queries.
   * Support Text-type as window partition keys (e.g., select distinct name, max(id) over (partition by name) from ``textTable;``).
   * Support Text-type fields in windows order by keys.
   * Support join on ``TEXT`` columns (such as ``t1.x = t2.y`` where ``x`` and ``y`` are columns of type ``TEXT``).
   * Complete the implementation of ``LIKE`` on ``TEXT`` columns (previously limited to prefix and suffix).
   * Support for cast fromm ``TEXT`` to ``REAL/FLOAT``.
   * New string function - ``REPEAT`` for repeating a string value for a specified number of times.
   
* Support mapping ``DECIMAL ORC`` columns to SQream's floating-point types.
   
* Support ``LIKE`` on non-literal patterns (such as columns and complex expressions).

* Catch OS signals and save the signal along with the stack trace in the SQream debug log.

* Support equijoin conditions on columns with different types (such as ``tinyint``, ``smallint``, ``int`` and ``bigint``).

* ``DUMP_DATABASE_DDL`` now includes foreign tables in the  output.

* New utility function - ``TRUNCATE_IF_EXISTS``.


Performance Enhancements
-------------
The following list describes the performance enhancements:


* Introduced the "MetaData on Demand" feature which results in signicant proformance improvements.

* Implemented regex functions (``RLIKE``, ``REGEXP_COUNT``, ``REGEXP_INSTR``, ``REGEXP_SUBSTR``, ``PATINDEX``) for ``TEXT`` columns on GPU.


Resolved Issues
-------------
The following list describes the resolved issues:


* Multiple distinct aggregates no longer need to be used with developerMode flag.
* In some scenarios, the ``statement_id`` and ``connection_id values`` are incorrectly recorded as ``-1`` in the log.
* ``NOT RLIKE`` is not supported for ``TEXT`` in the compiler.
* Casting from ``TEXT`` to ``date/datetime`` returns an error when the ``TEXT`` column contains ``NULL``.


Known Issues and Limitations
-------------
No known issues and limitations.


Upgrading to v2020.3.1
----------------

Versions are available for IBM POWER9, RedHat (CentOS) 7, Ubuntu 18.04, and other OSs via Docker.

Contact your account manager to get the latest release of SQream DB.


::::

Release Notes Version 2020.3
=================


New Features
----------
The following list describes the new features:


* Parquet and ORC files can now be exported to local storage, S3, and HDFS with :ref:`copy_to` and foreign data wrappers.

* New error tolerance features when loading data with foreign data wrappers.

* ``TEXT`` is ramping up with new features (previously only available with VARCHARs):

    * :ref:`substring`, :ref:`lower`, :ref:`ltrim`, :ref:`charindex`, :ref:`replace`, etc.

    * Binary operators - :ref:`concat`, :ref:`like`, etc.

    * Casts to and from ``TEXT``

* :ref:`sqream_studio` v5.1
     
     * New log viewer helps you track and debug what's going on in SQream DB.
     
     * Dashboard now also available for non-k8s deployments.
     
     * The editor contains a new query concurrency tool for date and numeric ranges.
     


Performance Enhancements
----------
The following list describes the performance enhancements:


* Error handling for CSV FDW.
* Enable logging errors - ORC, Parquet, CSV.
* Add limit and offset options to ``csv_fdw`` import.
* Enable logging errors to an external file when skipping CSV, Parquet, and ORC errors.
* Option to specify date format to the CSV FDW.
* Support all existing ``VARCHAR`` functions with ``TEXT`` on GPU.
* Support ``INSERT INTO`` + ``ORDER BY`` optimization for non-clustered tables.
* Performance improvements with I/O.

Resolved Issues
---------------
The following list describes the resolved issues:


* Better error message when passing the max errors limit. This was fixed.
* ``showFullExceptionInfo`` is no longer restricted to Developer Mode. This was fixed.
* An ``StreamAggregateA`` reduction error occured when performing aggregation on a ``NULL`` column.  This was fixed.
* Insert into query fails with ""Error at Sql phase during Stages ""rewriteSqlQuery"". This was fixed.
* Casting from ``VARCHAR`` to ``NVARCHAR` does not remove the spaces. This was fixed.
* An ``Internal Runtime Error t1.size() == t2.size()`` occurs when querying the ``sqream_catalog.delete_predicates``.  This was fixed.
* ``spoolMemoryGB`` and ``limitQueryMemoryGB`` show incorrectly in the **runtime global** section of ``show_conf.``  This was fixed.
* Casting empty text to ``int`` causes illegal memory access. This was fixed.
* Copying from the ``TEXT`` field is 1.5x slower than the ``VARCHAR`` equivalent. This was fixed.
* ``TPCDS 10TB - Internal runtime error (std::bad_alloc: out of memory)`` occurs on 2020.1.0.2. This was fixed.
* An unequal join on non-existing ``TEXT`` caused a system crash.  This was fixed.
* An ``Internal runtime time error`` occured when using ``TEXT (tpcds)``.  This was fixed.
* Copying CSV with a quote in the middle of a field to a ``TEXT`` field does not produce the required error.  This was fixed.
* Cannot monitor long network insert loads with SQream. This was fixed.
* Upper and like performance on ``NVARCHAR``. This was fixed.
* Insert into from 4 instances would get stuck (hanging).  This was fixed.
* An invalid formatted CSV would cause an insufficient memory error on a ``COPY FROM`` statement if a quote was not closed and the file was much larger than system memory. This was fixed.
* ``TEXT`` columns cannot be used with an outer join together with an inequality check (!= , <>). This was fixed.

Known Issues and Limitations
----------
The following list describes the known issues and limitations:


* Cast from ``TEXT`` to a ``DATE`` or ``DATETIME`` errors when the ``TEXT`` column contains ``NULL``

* Casting an empty ``TEXT`` field to an ``INT`` type returns ``0`` instead of erroring

* Multiple ``COUNT( distinct ... )`` operations on the ``TEXT`` data type are currently unsupported

* Multiple ``COUNT( distinct ... )`` operations within the same query are limited to "developer mode" due to an instability that was identified. If you rely on this feature, contact your SQream account manager to enable this feature.


Upgrading to v2020.3
----------

Versions are available for IBM POWER9, RedHat (CentOS) 7, Ubuntu 18.04, and other OSs via Docker.

Contact your account manager to get the latest release of SQream DB.
