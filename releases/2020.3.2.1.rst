.. _2021.2:

**************************
What's new in 2021.2
**************************

* 24 bugs fixed.
Yaniv's edit.
* Major performance enhancements.

Performance Enhancements
=========================
* Major feature release targeted for all on-premises customers.
* Includes basic Cloud functionality.

New Features
=========================


* Supports ``numeric(p, s)`` numeric data types where ``p`` is the total number of digits, (``38`` maximum), and ``s`` is the total number of decimal digits.
* **Question: I think each bullet below should be set off as its own section to make the document look more organized, because the example breaks the flow.**



Example:
   
   .. code-block:: none
      
      create or replace table t(x numeric(20, 10), y numeric(38, 38));
      insert into t values(1234567890.1234567890, 0.123245678901234567890123456789012345678);
      select x + y from t;

* **Question: Should this bullet be included in Known Issues and Limitations below?**
* Does not support Numeric Literal operations and known issues.

* Supports the following types:

   * All join types
   * All aggregation types
   * Scalar functions **(waiting for the list of limitations)**

* Text data type major bug fixes and functionality enhancements:

   * **Question: Which of the following are bug fixes and which are functionality enhancements?)**
   * Support text columns in queries with multiple distinct aggregates.
   * Text literal support for all functions.
   * Use LoopJoin instead of CrossJoin for join on Text keys.
    

* Supports Partial Sub-Queries.

See `currently supported functionality <https://sqream.atlassian.net/wiki/spaces/RF/pages/1433894919/Sub-Queries+support+and+limitations+in+SQream+DB+v2021.1>`_.
**Question: if this is a new feature, why is there existing documentation? Is this actually an enhancement, or really a new feature?**

* Literal arguments are now supported in all cases where column arguments are supported for a certain function. Literal arguments are only supported if the Literal value is  the same TYPE as the column.

* Supports Simple Scalar SQL UDFs.
See `supported syntax and usage <https://sqream.atlassian.net/wiki/spaces/RF/pages/1433731135/Simple+Scalar+SQL+UDF+s>`_.

* Logging enhancements - the following log information has been added for the following events:

  * Compilation start time.
  * When **(time?)** of the first metadata callback in the compiler (if relevant).
  * When **(time?)** of the last metadata callback in the compiler (if relevant).
  * When it **(the compilation?)** started attempting to get locks **(note: to be reviewed how statements get locks)**.
  * When **(time?)** a statement entered the queue.
  * When **(time?)** a statement exited the queue.
  * When **(time?)** a client has connected to this **(which?)** sqreamd (if it reconnects).
  * When **(time?)** it **(the compilation?)** started executing.


Optimized foreign data wrapper export:
-------------------------

  * WriteToFile chuck producer code paralleled to enhance performance. Transferring **(is "transferring" the right word here? Consider using "formatting.")** WriteToFile as a threaded chunk producer results in multi-thread export for orc, parquet, and csv, with better performance.

**Usage example:**

The following ``runTimeGlobal`` flags control exporting foreign data wrappers:

``copyToMaxMBPerFile`` (default: 0)

``WriteToFileThreads`` (default: 16)

If ``copyToMaxMBPerFile = 0`` - no parallelism. The feature is disabled. **Comment: added space before and after the 0. Compare to below.**

If ``copyToMaxMBPerFile = N`` - multi-thread is enabled, withN as the maximum file size (MB).

For best results, set ``copyToMaxMBPerFile`` to 10/20 MB files, and set ``WriteToFileThreads`` to 16.

Main Implemented Stories
================================
* SQream can always parse its own logs as CSVs.
* Supports conversion from Text to Numeric.
* Supports conversion from Numeric to Text.
* Supports a limited form **(limited in what sense?)** of NOT EXISTS subqueries in the WHERE clause.
* Supports a limited form **(limited in what sense?)** of EXISTS subqueries in the WHERE clause.
* Supports Literal variants for **charindex**.  
* MD on demand - optimizes frequent compiler UF's.
* MD on demand - optimizes table level commands that are not related to tables.
* MD on demand - optimizes all table level commands.
* Supports auto-compression lz4 and snappy for Numeric.
* Supports flat compression for Numeric type.
* Find a way **(What does "find a way" mean?)** to deal with SKT's `ORDER BY (select 0)`.
* Log locks in system - sqreamd. **(Need clarification)**
* Supports Statement level and concurrency troubleshooting, debug logging, and testing for SKT.
* Division operator for Numeric implemented.
* Verified that Numeric constant expressions work correctly.
* Supports Numeric aggregation functions.
* Explicit cast down from Numeric to Numeric.
* Minimum/maximum metadata for Decimal columns added.
* Supports Numeric columns as **group by keys**.
* Supports **Sort** operations on Decimal.
* Supports truncating Numeric values on ingestion from ORC and CSV.
* Catalog UF that accepts SQL valid patterns and escape characters added.
* Creates a basic random data FDW for non-text types.
* Improves the internal error message.
* **(Added?)** Simple Scalar SQL UDFs.
* Supports **stdin** as a file input for sqream **(capitalization = Sqream?)** SQL.
* TEXT **(why is TEXT capitalized? Consistency)** - Literal handling for all supported functions implemented.
* Supports Text columns in queries with multiple distinct aggregates.
* Use LoopJoin and not CrossJoin for join on Text keys. **(Duplicate - see above)**




Known Issues and Limitations
================================
* Production core dump from stability test
* Performance degradation - joins - outer_join1.sql
* Performance degradation - south_africa-sa4.sql
* Performance degradation - groupby - groupby_int_func_nvarchar40.sql





Bug Fixes
================================
* Copying from the CSV to the TEXT column without closing quotations risks crashing **sqreamd**.
* Unsupported insert error when calling an unsupported function.
* Incorrect error when inserting **(when inserting text?)** from a non-existent table **(how do you insert something from a non-existent table?)**.
* Error-select column list '*' **(need clarification)**
* Running a query generated several different results.
* Internal runtime error -encodekey **(need clarification)**
* Decimal data type compile error **(what caused this error to occur?)**.
* Rank() in window function sometimes returns garbage **(what is the technical definition of "garbage"?)**
* Memory smear returns incorrect results in a decimal data column.
* Bug related to the **STDDEV_SAMP**, **STDDEV_POP**, and **STDEV** functions.
* SQream fails on select **table_name,row_count** from **sqream_catalog.tables** order by **row_count limit** 5. **(need clarification)**
* Wildcards (*.x.y) do not work - parquet (csv is working) **(need clarification)**
* **Round(x,y)** in the **WHERE** clause on Numeric fails with **(does "with" mean "and generates a"?)** compiler error.  
* Star not supported.
* Window function query returns incorrect results.
* Window function on **null** value returns bad results.
* **charindex** returns different results for columns and literals.
* Incorrect error message when executing **log(x, y)**.
* UDF and Text types produce different memory errors.
* **internal runtime error** type has no fixed size when running maximum on Text on develop (cisco poc). **(need clarification)**
* avg(len(xnvarchar70)) sum overflow.  **(need clarification)**
* The minimum and maximum on TEXT can be 15 times slower than **varchar**.
* **regexp_instr** returns an empty regular expression.
* Schemas with external tables can be dropped.

Naming Changes
================================
No relevant naming changes were made.

Deprecated Features
================================
No features were depecrated.

Version Acceptance Criteria
================================
See `Test Plan <https://docs.google.com/spreadsheets/d/1yZFf1R4ncCe3_fJii9mhrVCOahH2d3Nv_H_J5yKosFo/edit#gid=0>`_.
Functional Regression - pass
Stability Test - pass


Upgrading to v2021.2
========================

Versions are available for IBM POWER9, RedHat (CentOS) 7, Ubuntu 18.04, and other OSs via Docker.

Contact your account manager to get the latest release of SQream DB.
